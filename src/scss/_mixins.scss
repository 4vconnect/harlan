@mixin container {
    max-width: $page-width;
    margin: auto;
}

@mixin a-color($color) {
    color: $color;
    &:visited, &:active, &:link, &:hover {
        text-decoration: none;
        color: $color;
    }
}

@mixin zero-last {
    &:first-child {
        margin-left: 0;
    }
    &:last-child {
        margin-right: 0;
    }    
}

@mixin result-type($color:#FFAE86, $odd: true, $hover: false, $amount: 0%, $fnc:"darken",  $amountOdd : 5%, $fncOdd : "darken", $amountHover: 5%, $fncHover: "lighten") {

    background-color: call($fnc, $color, $amount);
    @if $odd {
        &:nth-child(odd) {
            background-color: call($fncOdd, call($fnc, $color, $amount), $amountOdd);
        }
    }
    @if $hover {
        @include transition(background-color, 500ms);
        &:hover {
            background-color: call($fncHover, call($fnc, $color, $amount), $amountHover);
            @if $odd {
                &:nth-child(odd) {
                    background-color: call($fncHover, call($fncOdd, call($fnc, $color, $amount), $amountOdd), $amountHover);
                }
            }
        }
    }
}

@mixin result-types($odd: true, $hover: false, $amount: 0%, $fnc: "darken", $amountOdd : 5%, $fncOdd : "darken", $amountHover: 5%, $fncHover: "lighten", $selector: "&", $color: #d6d6d6) {

    #{$selector} {
        @include result-type(lighten($color, 6%), $odd, $hover, $amount, $fnc, $amountOdd, $fncOdd, $amountHover, $fncHover);
    }

    @content;
}

@mixin classHideEnabled {
    &.hide {
        display: none !important;
    }
}